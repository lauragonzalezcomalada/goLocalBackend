# Generated by Django 5.2.4 on 2025-08-29 14:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bono',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.PositiveIntegerField()),
                ('price', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='CampoReserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('text', 'Texto'), ('email', 'Email'), ('number', 'NÃºmero'), ('date', 'Fecha')], max_length=20)),
                ('requerido', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentEventsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('start_range', models.PositiveIntegerField()),
                ('end_range', models.PositiveIntegerField(blank=True, null=True)),
                ('price', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=256)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='places_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(default='fa-star', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='activities_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('tickets_link', models.CharField(blank=True, max_length=100, null=True)),
                ('gratis', models.BooleanField(default=True)),
                ('reserva_necesaria', models.BooleanField(blank=True, default=False, null=True)),
                ('control_entradas', models.BooleanField(blank=True, default=False, null=True)),
                ('price', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shares', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('clicks_on_tickets_link', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('active', models.BooleanField(default=False)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.place')),
                ('tags', models.ManyToManyField(blank=True, related_name='activities', to='api.tag')),
            ],
        ),
        migrations.CreateModel(
            name='EventTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('tipoEvento', models.IntegerField(choices=[(0, 'Activity'), (1, 'Promo'), (2, 'Plan Privado')], default=0)),
                ('values', models.JSONField()),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivatePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='private_plans_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('gratis', models.BooleanField(default=True)),
                ('reserva_necesaria', models.BooleanField(default=True)),
                ('price', models.FloatField(default=0.0)),
                ('invitation_code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('active', models.BooleanField(default=False)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_plans', to='api.place')),
            ],
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='promo_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('endDateandtime', models.DateTimeField(blank=True, null=True)),
                ('repeat', models.BooleanField(default=False)),
                ('asistentes', models.IntegerField(default=0)),
                ('reserva_necesaria', models.BooleanField(blank=True, default=False, null=True)),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shares', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('active', models.BooleanField(default=False)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promos', to='api.place')),
                ('tags', models.ManyToManyField(blank=True, related_name='promos', to='api.tag')),
            ],
        ),
        migrations.CreateModel(
            name='EntradasForPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('maxima_disponibilidad', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('disponibles', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio', models.FloatField(default=0.0)),
                ('titulo', models.TextField()),
                ('desc', models.TextField(blank=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entradas_for_plan', to='api.activity')),
                ('privateplan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entradas_for_plan_privado', to='api.privateplan')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entradas_for_promo', to='api.promo')),
            ],
        ),
        migrations.CreateModel(
            name='ReservaForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('max_disponibilidad', models.PositiveIntegerField()),
                ('confirmados', models.PositiveIntegerField(default=0)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas_forms', to='api.activity')),
                ('campos', models.ManyToManyField(blank=True, related_name='formularios', to='api.camporeserva')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas_forms', to='api.promo')),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('values', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('estado', models.IntegerField(choices=[(0, 'No asistido'), (1, 'Asistido')], default=0)),
                ('reserva_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='api.reservaform')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=256, null=True)),
                ('locationId', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profiles_images/')),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('telefono', models.IntegerField(blank=True, null=True)),
                ('available_planes_gratis', models.IntegerField(blank=True, default=8, null=True)),
                ('creador', models.BooleanField(default=False)),
                ('pago_suscripcion_mes_proximo', models.BooleanField(default=False)),
                ('pago_suscripcion_mes_actual', models.BooleanField(default=False)),
                ('mp_access_token', models.TextField(blank=True, null=True)),
                ('mp_refresh_token', models.TextField(blank=True, null=True)),
                ('mp_user_id', models.BigIntegerField(blank=True, null=True)),
                ('token_expiration', models.DateTimeField(blank=True, null=True)),
                ('activities', models.ManyToManyField(blank=True, related_name='activities', to='api.activity')),
                ('payment_events_range', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_profiles', to='api.paymenteventsranges')),
                ('promos', models.ManyToManyField(blank=True, related_name='promos', to='api.promo')),
                ('siguiendo', models.ManyToManyField(blank=True, related_name='seguidores', to='api.userprofile')),
                ('tags', models.ManyToManyField(blank=True, related_name='users', to='api.tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fecha_compra', models.DateTimeField(default=django.utils.timezone.now)),
                ('precio', models.FloatField(blank=True, default=0.0, null=True)),
                ('status', models.IntegerField(choices=[(0, 'No asistido'), (1, 'Asistido')], default=0)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('entrada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='api.entradasforplan')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PrivatePlanInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Invitado'), (1, 'Aceptado'), (2, 'Pagado')], default=0)),
                ('private_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.privateplan')),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userprofile')),
            ],
            options={
                'unique_together': {('private_plan', 'invited_user')},
            },
        ),
        migrations.AddField(
            model_name='privateplan',
            name='invited_users',
            field=models.ManyToManyField(blank=True, related_name='planes_invitados', through='api.PrivatePlanInvitation', to='api.userprofile'),
        ),
        migrations.CreateModel(
            name='PaymentForUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('amount', models.PositiveIntegerField()),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_month', models.DateTimeField(auto_now_add=True)),
                ('userProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments_for_use', to='api.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('neededAmount', models.FloatField(default=0.0)),
                ('assignedAmount', models.FloatField(default=0.0)),
                ('private_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.privateplan')),
                ('people_in_charge', models.ManyToManyField(related_name='items_in_charge', to='api.userprofile')),
            ],
        ),
    ]
