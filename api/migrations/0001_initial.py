# Generated by Django 4.2.20 on 2025-06-20 15:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='activities_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=100, null=True)),
                ('web_link', models.CharField(blank=True, max_length=100, null=True)),
                ('tickets_link', models.CharField(blank=True, max_length=100, null=True)),
                ('gratis', models.BooleanField(default=True)),
                ('reserva_necesaria', models.BooleanField(default=True)),
                ('price', models.FloatField(default=0.0)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=256)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='places_images/')),
            ],
        ),
        migrations.CreateModel(
            name='PrivatePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='private_plans_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('gratis', models.BooleanField(default=True)),
                ('reserva_necesaria', models.BooleanField(default=True)),
                ('price', models.FloatField(default=0.0)),
                ('invitation_code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_plans', to='api.place')),
            ],
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('shortDesc', models.CharField(blank=True, max_length=144, null=True)),
                ('desc', models.TextField(blank=True)),
                ('lat', models.FloatField(null=True)),
                ('long', models.FloatField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='promo_images/')),
                ('startDateandtime', models.DateTimeField(blank=True, null=True)),
                ('endDateandtime', models.DateTimeField(blank=True, null=True)),
                ('repeat', models.BooleanField(default=False)),
                ('asistentes', models.IntegerField(default=0)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promos', to='api.place')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(default='fa-star', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('originLocation', models.CharField(blank=True, max_length=256, null=True)),
                ('originLocationId', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profiles_images/')),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('activities', models.ManyToManyField(blank=True, related_name='activities', to='api.activity')),
                ('promos', models.ManyToManyField(blank=True, related_name='promos', to='api.promo')),
                ('siguiendo', models.ManyToManyField(blank=True, related_name='seguidores', to='api.userprofile')),
                ('tags', models.ManyToManyField(blank=True, related_name='users', to='api.tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='promo',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='promos', to='api.tag'),
        ),
        migrations.AddField(
            model_name='activity',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.place'),
        ),
        migrations.AddField(
            model_name='activity',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='activities', to='api.tag'),
        ),
        migrations.CreateModel(
            name='PrivatePlanInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('invited', 'Invitado'), ('accepted', 'Aceptado'), ('paid', 'Pagado')], default='invited', max_length=10)),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userprofile')),
                ('private_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.privateplan')),
            ],
            options={
                'unique_together': {('private_plan', 'invited_user')},
            },
        ),
    ]
